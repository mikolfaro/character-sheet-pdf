{"version":3,"file":"character-sheet-pdf.js","mappings":"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","sources":["webpack://characterSheetPdf/webpack/universalModuleDefinition","webpack://characterSheetPdf/external umd \"pdf-lib\"","webpack://characterSheetPdf/webpack/bootstrap","webpack://characterSheetPdf/webpack/runtime/define property getters","webpack://characterSheetPdf/webpack/runtime/hasOwnProperty shorthand","webpack://characterSheetPdf/webpack/runtime/make namespace object","webpack://characterSheetPdf/./src/Pf2/Ability.ts","webpack://characterSheetPdf/./src/Pf2/AbilityScore.ts","webpack://characterSheetPdf/./src/Pf2/Action.ts","webpack://characterSheetPdf/./src/Pf2/Proficiency.ts","webpack://characterSheetPdf/./src/Pf2/ArmorClass.ts","webpack://characterSheetPdf/./src/Pf2/FeatRecapPage.ts","webpack://characterSheetPdf/./src/Pf2/HitPoints.ts","webpack://characterSheetPdf/./src/Pf2/Skill.ts","webpack://characterSheetPdf/./src/Pf2/Lore.ts","webpack://characterSheetPdf/./src/Pf2/Perception.ts","webpack://characterSheetPdf/./src/Pf2/SavingThrows.ts","webpack://characterSheetPdf/./src/Pf2/Strike.ts","webpack://characterSheetPdf/./src/Pf2/WeaponProficiencies.ts","webpack://characterSheetPdf/./src/Pf2/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"pdf-lib\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"pdf-lib\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"characterSheetPdf\"] = factory(require(\"pdf-lib\"));\n\telse\n\t\troot[\"characterSheetPdf\"] = factory(root[\"pdf-lib\"]);\n})(this, (__WEBPACK_EXTERNAL_MODULE__992__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__992__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var Ability;\n(function (Ability) {\n    Ability[\"STR\"] = \"STR\";\n    Ability[\"DEX\"] = \"DEX\";\n    Ability[\"CON\"] = \"CON\";\n    Ability[\"INT\"] = \"INT\";\n    Ability[\"WIS\"] = \"WIS\";\n    Ability[\"CHA\"] = \"CHA\";\n})(Ability || (Ability = {}));\nexport default Ability;\n","import Ability from './Ability';\nexport default class AbilityScores {\n    constructor(STR, DEX, CON, INT, WIS, CHA) {\n        this.scores = new Map();\n        this.scores.set(Ability.STR, STR);\n        this.scores.set(Ability.DEX, DEX);\n        this.scores.set(Ability.CON, CON);\n        this.scores.set(Ability.INT, INT);\n        this.scores.set(Ability.WIS, WIS);\n        this.scores.set(Ability.CHA, CHA);\n    }\n    modifier(ability) {\n        return (this.scores.get(ability) - 10) / 2;\n    }\n    entries() {\n        return this.scores.entries();\n    }\n}\n","export default class Action {\n    constructor(name, actions, reaction = false, freeAction = false, traits = [], page = null, description = null, trigger = null, oncePerDay = null, requirements = null) {\n        this.name = name;\n        this.actions = actions;\n        this.reaction = reaction;\n        this.freeAction = freeAction;\n        this.traits = traits;\n        this.page = page;\n        this.description = description;\n        this.trigger = trigger;\n        this.oncePerDay = oncePerDay;\n        this.requirements = requirements;\n    }\n}\n","export default class Proficiency {\n    constructor(name, value) {\n        this.name = name;\n        this.value = value;\n    }\n    toString() {\n        return this.name;\n    }\n    bonus(level) {\n        return this === Proficiency.U ? 0 : this.value + level;\n    }\n}\nProficiency.U = new Proficiency('U', 0);\nProficiency.T = new Proficiency('T', 2);\nProficiency.E = new Proficiency('E', 4);\nProficiency.M = new Proficiency('M', 6);\nProficiency.L = new Proficiency('L', 8);\n","import Proficiency from './Proficiency';\nexport default class ArmorClass {\n    constructor(cap = null, unarmored = Proficiency.U, light = Proficiency.U, medium = Proficiency.U, heavy = Proficiency.U, current = Proficiency.U, otherBonus = null) {\n        this.light = Proficiency.U;\n        this.medium = Proficiency.U;\n        this.heavy = Proficiency.U;\n        this.current = Proficiency.U;\n        this.cap = cap;\n        this.unarmored = unarmored;\n        this.light = light;\n        this.medium = medium;\n        this.heavy = heavy;\n        this.current = current;\n        this.otherBonus = otherBonus;\n    }\n}\n","export default class FeatRecapPage {\n    constructor(pdfDoc) {\n        this.TITLE_PADDING_BOTTOM = 14;\n        this.TITLE_SIZE = 12;\n        this.COLUMN_WIDTH = 160;\n        this.COLUMN_GAP = 40;\n        this.pdfDoc = pdfDoc;\n        const { width: width, height: height } = this.pdfDoc.getPage(0).getSize();\n        this.width = width;\n        this.height = height;\n        this._pdfPage = this.pdfDoc.addPage([this.width, this.height]);\n        this._pdfPage.moveTo(22, 740);\n        this._pdfPage.drawText('Feat and feature details', { size: 16 });\n    }\n    addFeats(feats) {\n        this._pdfPage.moveTo(22, 708);\n        feats.sort((a, b) => {\n            if (a.name < b.name) {\n                return -1;\n            }\n            else if (a.name > b.name) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        });\n        this.chunks(feats, 18).forEach((featsChunk, chunkIdx) => {\n            if (chunkIdx) {\n                this._pdfPage = this.pdfDoc.addPage([this.width, this.height]);\n                this._pdfPage.moveTo(22, 708);\n            }\n            featsChunk.forEach((feat, idx) => {\n                this._pdfPage.drawText(feat.name, { size: this.TITLE_SIZE });\n                this._pdfPage.moveDown(this.TITLE_PADDING_BOTTOM);\n                if (feat.description) {\n                    this._pdfPage.drawText(feat.description, {\n                        size: 8,\n                        maxWidth: this.COLUMN_WIDTH,\n                        lineHeight: 10,\n                    });\n                }\n                if (idx % 3 !== 2) {\n                    this._pdfPage.moveRight(this.COLUMN_WIDTH + this.COLUMN_GAP);\n                    this._pdfPage.moveUp(this.TITLE_PADDING_BOTTOM);\n                }\n                else {\n                    this._pdfPage.moveDown(100);\n                    this._pdfPage.moveLeft((this.COLUMN_WIDTH + this.COLUMN_GAP) * 2);\n                }\n            });\n        });\n    }\n    chunks(feats, size) {\n        return Array.from(new Array(Math.ceil(feats.length / size)), (_, i) => feats.slice(i * size, i * size + size));\n    }\n}\n","export default class HitPoints {\n    constructor(max, current, temporary = null, dying = null, wounded = null, resistances = [], conditions = []) {\n        this.temporary = null;\n        this.dying = null;\n        this.wounded = null;\n        this.resistances = [];\n        this.conditions = [];\n        this.max = max;\n        this.current = current;\n        this.temporary = temporary;\n        this.dying = dying;\n        this.wounded = wounded;\n        this.resistances = Array.isArray(resistances) ? resistances : [resistances];\n        this.conditions = Array.isArray(conditions) ? conditions : [conditions];\n    }\n}\n","import Proficiency from './Proficiency';\nexport default class Skill {\n    constructor(proficiency = Proficiency.U, otherBonus = null, armorMalus = null) {\n        this.proficiency = proficiency;\n        this.otherBonus = otherBonus;\n        this.armorMalus = armorMalus;\n    }\n}\n","import Proficiency from './Proficiency';\nimport Skill from './Skill';\nexport default class Lore extends Skill {\n    constructor(name, proficiency = Proficiency.U, otherBonus = null, armorMalus = null) {\n        super(proficiency, otherBonus, armorMalus);\n        this.name = name;\n    }\n}\n","import Proficiency from './Proficiency';\nexport default class Perception {\n    constructor(proficency = Proficiency.U, otherBonus = null, senses = []) {\n        this.proficiency = proficency;\n        this.otherBonus = otherBonus;\n        this.senses = Array.isArray(senses) ? senses : [senses];\n    }\n}\n","export default class SavingThrow {\n    constructor(proficiency, otherBonus = null) {\n        this.proficiency = proficiency;\n        this.otherBonus = otherBonus;\n    }\n}\n","export default class Strike {\n    constructor(weapon, keyAbility, proficiency, damageDice, damageBonus, damageType, other = [], traits = [], special = null, wSpec = null, otherBonus = null) {\n        this.weapon = weapon;\n        this.keyAbility = keyAbility;\n        this.proficiency = proficiency;\n        this.damageDice = damageDice;\n        this.damageBonus = damageBonus;\n        this.damageType = damageType;\n        this.otherNotes = Array.isArray(other) ? other : [other];\n        this.traits = Array.isArray(traits) ? traits : [traits];\n        this.special = special;\n        this.wSpec = wSpec;\n        this.otherBonus = otherBonus;\n    }\n}\n","export default class WeaponProficiencies {\n    constructor(simple = null, martial = null, other = null) {\n        this.simple = simple;\n        this.martial = martial;\n        this.other = other ? other : new Map();\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { PDFButton, PDFDocument, PDFTextField, } from 'pdf-lib';\nimport Ability from './Ability';\nimport AbilityScores from './AbilityScore';\nimport Action from './Action';\nimport ArmorClass from './ArmorClass';\nimport FeatRecapPage from './FeatRecapPage';\nimport HitPoints from './HitPoints';\nimport Lore from './Lore';\nimport Perception from './Perception';\nimport Proficiency from './Proficiency';\nimport SavingThrow from './SavingThrows';\nimport Skill from './Skill';\nimport Strike from './Strike';\nimport WeaponProficiencies from './WeaponProficiencies';\nimport PDF from './character_sheet.pdf';\nexport default class Pf2 {\n    set characterName(name) {\n        this.setTextField('CHARACTER_NAME', name);\n    }\n    set playerName(name) {\n        this.setTextField('PLAYER_NAME', name);\n    }\n    set ancestryAndHeritage(value) {\n        this.setTextField('ANCESTRY', value);\n    }\n    set class(value) {\n        this.setTextField('CLASS', value);\n    }\n    set background(value) {\n        this.setTextField('BACKGROUND', value);\n    }\n    set size(value) {\n        this.setTextField('SIZE', value);\n    }\n    set abilityScores(scores) {\n        this._abilityScores = scores;\n        for (const [ability, value] of this._abilityScores.entries()) {\n            this.setTextField(`${ability}_SCORE`, value);\n            this.setModField(`${ability}_MOD`, scores.modifier(ability));\n        }\n    }\n    set alignement(value) {\n        this.setTextField('ALIGNMENT', value);\n    }\n    set traits(value) {\n        const printable = Array.isArray(value) ? this.formatList(value) : value;\n        this.setTextField('TRAITS', printable);\n    }\n    set deity(value) {\n        this.setTextField('DEITY', value);\n    }\n    set level(value) {\n        this._level = value;\n        this.setTextField('LEVEL', value);\n    }\n    get level() {\n        return this._level;\n    }\n    set heroPoints(value) {\n        this.setTextField('HERO_POINTS', value);\n    }\n    set experiencePointsXp(value) {\n        this.setTextField('EXPERIENCE_POINTS_XP', value);\n    }\n    set classDc(value) {\n        const modBonus = this._abilityScores.modifier(value.keyAbility);\n        const profBonus = value.proficiency.bonus(this.level);\n        const dcValue = 10 + modBonus + profBonus + value.otherBonus;\n        this.setTextField('DC_VALUE', dcValue);\n        this.setTextField('DC_KEY_BONUS', this.formatModifier(modBonus));\n        this.setProficiencyFields('DC_PROF', value.proficiency);\n        this.setTextField('DC_ITEM_BONUS', this.formatModifier(value.otherBonus));\n    }\n    set armorClass(value) {\n        const modBonus = this._abilityScores.modifier(Ability.DEX);\n        const profBonus = value.current.bonus(this.level);\n        const armorClassValue = 10 + Math.min(modBonus, value.cap) + profBonus + value.otherBonus;\n        this.setTextField('AC_VALUE', armorClassValue);\n        this.setTextField('AC_CAP', this.formatModifier(value.cap));\n        this.setProficiencyFields('AC_PROF', value.current);\n        this.setTextField('AC_ITEM_BONUS', this.formatModifier(value.otherBonus));\n        this.setProficiencyFields('AC_PROF_UNARMORED', value.unarmored);\n        this.setProficiencyFields('AC_PROF_LIGHT', value.light);\n        this.setProficiencyFields('AC_PROF_MEDIUM', value.medium);\n        this.setProficiencyFields('AC_PROF_HEAVY', value.heavy);\n    }\n    set fortitude(value) {\n        this.setSavingThrow(value, Ability.CON, 'FORT');\n    }\n    set reflex(value) {\n        this.setSavingThrow(value, Ability.DEX, 'REFL');\n    }\n    set will(value) {\n        this.setSavingThrow(value, Ability.WIS, 'WILL');\n    }\n    set hitPoints(value) {\n        this.setTextField('HP_MAX', value.max);\n        this.setTextField('HP_CURRENT', value.current);\n        this.setTextField('TEMPORARY', value.temporary);\n        this.setTextField('DYING', value.dying);\n        this.setTextField('WOUNDED', value.wounded);\n        this.setTextField('RESISTANCES', this.formatList(value.resistances));\n        this.setTextField('CONDITIONS', this.formatList(value.conditions));\n    }\n    set perception(value) {\n        const modBonus = this._abilityScores.modifier(Ability.WIS);\n        const profBonus = value.proficiency.bonus(this.level);\n        const perceptionValue = modBonus + profBonus + value.otherBonus;\n        this.setTextField('PERCEPTION_VALUE', perceptionValue);\n        this.setProficiencyFields('PERCEPTION_PROF', value.proficiency);\n        this.setTextField('PERCEPTION_ITEM_BONUS', this.formatModifier(value.otherBonus));\n        this.setTextField('SENSES', this.formatList(value.senses));\n    }\n    set speed(value) {\n        this.setTextField('SPEED', value);\n    }\n    set movementNotes(value) {\n        this.setTextField('MOVEMENT_NOTES', value);\n    }\n    set acrobatics(value) {\n        this.setSkill(value, Ability.DEX, 'ACROBATICS');\n    }\n    set arcana(value) {\n        this.setSkill(value, Ability.INT, 'ARCANA');\n    }\n    set athletics(value) {\n        this.setSkill(value, Ability.STR, 'ATHLETICS');\n    }\n    set crafting(value) {\n        this.setSkill(value, Ability.INT, 'CRAFTING');\n    }\n    set deception(value) {\n        this.setSkill(value, Ability.CHA, 'DECEPTION');\n    }\n    set diplomacy(value) {\n        this.setSkill(value, Ability.CHA, 'DIPLOMACY');\n    }\n    set intimidation(value) {\n        this.setSkill(value, Ability.CHA, 'INTIMIDATION');\n    }\n    set medicine(value) {\n        this.setSkill(value, Ability.WIS, 'MEDICINE');\n    }\n    set nature(value) {\n        this.setSkill(value, Ability.WIS, 'NATURE');\n    }\n    set occultism(value) {\n        this.setSkill(value, Ability.INT, 'OCCULTISM');\n    }\n    set performance(value) {\n        this.setSkill(value, Ability.CHA, 'PERFORMANCE');\n    }\n    set religion(value) {\n        this.setSkill(value, Ability.WIS, 'RELIGION');\n    }\n    set society(value) {\n        this.setSkill(value, Ability.INT, 'SOCIETY');\n    }\n    set stealth(value) {\n        this.setSkill(value, Ability.DEX, 'STEALTH');\n    }\n    set survival(value) {\n        this.setSkill(value, Ability.WIS, 'SURVIVAL');\n    }\n    set thievery(value) {\n        this.setSkill(value, Ability.DEX, 'THIEVERY');\n    }\n    set lore1(value) {\n        this.setTextField('LORE_DESC_1', value.name);\n        this.setSkill(value, Ability.INT, 'LORE_1');\n    }\n    set lore2(value) {\n        this.setTextField('LORE_DESC_2', value.name);\n        this.setSkill(value, Ability.INT, 'LORE_2');\n    }\n    set meeleeStrikes(value) {\n        value.slice(0, 3).forEach((strike, i) => {\n            const idx = i + 1;\n            this.setStrike(strike, idx);\n        });\n    }\n    set rangedStrikes(value) {\n        value.slice(0, 3).forEach((strike, i) => {\n            const idx = i + 4;\n            this.setStrike(strike, idx);\n        });\n    }\n    set weaponProficiencies(value) {\n        this.setProficiencyFields('WP_SIMPLE', value.simple);\n        this.setProficiencyFields('WP_MARTIAL', value.martial);\n        const inverseMap = new Map();\n        for (const [name, prof] of value.other.entries()) {\n            if (inverseMap.has(prof)) {\n                inverseMap.get(prof).push(name);\n            }\n            else {\n                inverseMap.set(prof, [name]);\n            }\n        }\n        let count = 1;\n        [Proficiency.L, Proficiency.M, Proficiency.E, Proficiency.T].forEach((prof) => {\n            if (count > 2) {\n                return;\n            }\n            if (inverseMap.has(prof)) {\n                const weapons = inverseMap.get(prof).sort();\n                this.setProficiencyFields(`WP_OTHER_${count}`, prof);\n                this.setTextField(`WP_OTHER_${count}_DESC`, this.formatList(weapons));\n                count++;\n            }\n        });\n    }\n    set languages(value) {\n        this.setTextField('LANGUAGES', this.formatList(value));\n    }\n    set ancestryFeat1(value) {\n        this.setFeatFields(value, `AF_1`);\n    }\n    set ancestryFeatS1(value) {\n        this.setFeatFields(value, `AF_S1`);\n    }\n    set heritageFeat1(value) {\n        this.setFeatFields(value, `AF_H1`);\n    }\n    set ancestryFeat5(value) {\n        this.setFeatFields(value, `AF_5`);\n    }\n    set ancestryFeat9(value) {\n        this.setFeatFields(value, `AF_9`);\n    }\n    set ancestryFeat13(value) {\n        this.setFeatFields(value, `AF_13`);\n    }\n    set ancestryFeat17(value) {\n        this.setFeatFields(value, `AF_17`);\n    }\n    set skillFeatB(value) {\n        this.setFeatFields(value, `SF_B`);\n    }\n    set skillFeat2(value) {\n        this.setFeatFields(value, `SF_2`);\n    }\n    set skillFeat4(value) {\n        this.setFeatFields(value, `SF_4`);\n    }\n    set skillFeat6(value) {\n        this.setFeatFields(value, `SF_6`);\n    }\n    set skillFeat8(value) {\n        this.setFeatFields(value, `SF_8`);\n    }\n    set skillFeat10(value) {\n        this.setFeatFields(value, `SF_10`);\n    }\n    set skillFeat12(value) {\n        this.setFeatFields(value, `SF_12`);\n    }\n    set skillFeat14(value) {\n        this.setFeatFields(value, `SF_14`);\n    }\n    set skillFeat16(value) {\n        this.setFeatFields(value, `SF_16`);\n    }\n    set skillFeat18(value) {\n        this.setFeatFields(value, `SF_18`);\n    }\n    set skillFeat20(value) {\n        this.setFeatFields(value, `SF_20`);\n    }\n    set generalFeat3(value) {\n        this.setFeatFields(value, `GF_3`);\n    }\n    set generalFeat7(value) {\n        this.setFeatFields(value, `GF_7`);\n    }\n    set generalFeat11(value) {\n        this.setFeatFields(value, `GF_11`);\n    }\n    set generalFeat15(value) {\n        this.setFeatFields(value, `GF_15`);\n    }\n    set generalFeat19(value) {\n        this.setFeatFields(value, `GF_19`);\n    }\n    set classFeat1(value) {\n        this.setFeatFields(value, `CF_1`);\n    }\n    set classFeat2(value) {\n        this.setFeatFields(value, `CF_2`);\n    }\n    set classFeat4(value) {\n        this.setFeatFields(value, `CF_4`);\n    }\n    set classFeat6(value) {\n        this.setFeatFields(value, `CF_6`);\n    }\n    set classFeat8(value) {\n        this.setFeatFields(value, `CF_8`);\n    }\n    set classFeat10(value) {\n        this.setFeatFields(value, `CF_10`);\n    }\n    set classFeat12(value) {\n        this.setFeatFields(value, `CF_12`);\n    }\n    set classFeat14(value) {\n        this.setFeatFields(value, `CF_14`);\n    }\n    set classFeat16(value) {\n        this.setFeatFields(value, `CF_16`);\n    }\n    set classFeat18(value) {\n        this.setFeatFields(value, `CF_18`);\n    }\n    set classFeat20(value) {\n        this.setFeatFields(value, `CF_20`);\n    }\n    set bonusFeats(value) {\n        const values = Array.isArray(value) ? value : [value];\n        this.allFeats.push(...values);\n        const names = values.map((aValue) => aValue.name).sort();\n        const half = names.length / 2 + 1;\n        const name1 = names.slice(0, half);\n        const name2 = names.slice(half);\n        this.setTextField(`BF_1`, this.formatList(name1));\n        this.setTextField(`BF_2`, this.formatList(name2));\n    }\n    set classFeature1_1(value) {\n        this.setFeatFields(value, `FEATURE_1_1`);\n    }\n    set classFeature1_2(value) {\n        this.setFeatFields(value, `FEATURE_1_2`);\n    }\n    set classFeature3(value) {\n        this.setFeatFields(value, `FEATURE_3`);\n    }\n    set classFeature5(value) {\n        this.setFeatFields(value, `FEATURE_5`);\n    }\n    set classFeature7(value) {\n        this.setFeatFields(value, `FEATURE_7`);\n    }\n    set classFeature9(value) {\n        this.setFeatFields(value, `FEATURE_9`);\n    }\n    set classFeature11(value) {\n        this.setFeatFields(value, `FEATURE_11`);\n    }\n    set classFeature13(value) {\n        this.setFeatFields(value, `FEATURE_13`);\n    }\n    set classFeature15(value) {\n        this.setFeatFields(value, `FEATURE_15`);\n    }\n    set classFeature17(value) {\n        this.setFeatFields(value, `FEATURE_17`);\n    }\n    set classFeature19(value) {\n        this.setFeatFields(value, `FEATURE_19`);\n    }\n    set wornItems(items) {\n        this.wornItemsBulk = Math.floor(items.reduce((sum, item) => sum + item.bulk * (item.quantity || 1), 0));\n        this.setItems(items, 'WORN_ITEMS');\n    }\n    set readiedItems(items) {\n        this.readiedItemsBulk = Math.floor(items.reduce((sum, item) => sum + item.bulk * (item.quantity || 1), 0));\n        this.setItems(items, 'READIED_ITEMS');\n    }\n    set otherItems(items) {\n        this.otherItemsBulk = this.calculateBulk(items);\n        this.setItems(items, 'OTHER_ITEMS');\n    }\n    set purse(purse) {\n        this.purseBulk =\n            ((purse.copper || 0) +\n                (purse.silver || 0) +\n                (purse.gold || 0) +\n                (purse.platinum || 0)) /\n                1000.0;\n        this.setTextField('COPPER', purse.copper || 0);\n        this.setTextField('SILVER', purse.silver || 0);\n        this.setTextField('GOLD', purse.gold || 0);\n        this.setTextField('PLATINUM', purse.platinum || 0);\n    }\n    set actions(actions) {\n        this.freeActionsAndReactions = [];\n        this.actionsAndActivities = [];\n        actions.forEach((action) => {\n            if (action.freeAction || action.reaction) {\n                this.freeActionsAndReactions.push(action);\n            }\n            else {\n                this.actionsAndActivities.push(action);\n            }\n        });\n        this.actionsAndActivities.slice(0, 6).forEach((action, idx) => {\n            this.fillAction(action, `AA${idx + 1}`);\n        });\n        this.freeActionsAndReactions.slice(0, 6).forEach((action, idx) => {\n            this.fillAction(action, `FA${idx + 1}`);\n        });\n    }\n    importCharacterSketchPng(sketchData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const sketchButton = this.form.getField('CHARACTER_SKETCH');\n            if (sketchButton instanceof PDFButton) {\n                this.characterSketch = yield this.pdfDoc.embedPng(sketchData);\n                sketchButton.setImage(this.characterSketch);\n            }\n        });\n    }\n    appendFeatDetails() {\n        const featRecapPage = new FeatRecapPage(this.pdfDoc);\n        featRecapPage.addFeats(this.allFeats);\n    }\n    fillBulk() {\n        const bulk = Math.floor(this.wornItemsBulk +\n            this.readiedItemsBulk +\n            this.otherItemsBulk +\n            this.purseBulk);\n        this.setTextField('CURRENT_BULK', bulk);\n        this.setTextField('ENCUMBERED_BULK', this._abilityScores.modifier(Ability.STR) + 5);\n        this.setTextField('MAXIMUM_BULK', this._abilityScores.modifier(Ability.STR) + 10);\n    }\n    dataUri() {\n        return this.pdfDoc.saveAsBase64({ dataUri: true });\n    }\n    static create() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const instance = new Pf2();\n            yield instance.loadPdf();\n            return instance;\n        });\n    }\n    constructor() {\n        this.allFeats = [];\n    }\n    loadPdf() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.pdfDoc = yield PDFDocument.load(PDF);\n            this.form = this.pdfDoc.getForm();\n        });\n    }\n    formatModifier(mod) {\n        if (mod === null) {\n            return '';\n        }\n        return mod < 0 ? `${mod}` : `+${mod}`;\n    }\n    formatList(value) {\n        return value.join(', ');\n    }\n    setTextField(name, value, strict = false) {\n        if (value === null || value === undefined) {\n            return;\n        }\n        if (strict) {\n            const field = this.form.getTextField(name);\n            field.setText(value.toString());\n        }\n        else {\n            const field = this.form.getFieldMaybe(name);\n            if (field && field instanceof PDFTextField) {\n                field.setText(value.toString());\n            }\n        }\n    }\n    setModField(name, value) {\n        const modTextField = this.form.getTextField(name);\n        modTextField.setText(this.formatModifier(value));\n    }\n    setCheckBox(fieldName) {\n        const checkboxField = this.form.getCheckBox(fieldName);\n        checkboxField.check();\n    }\n    setProficiencyFields(proficiencyName, value) {\n        if (value === Proficiency.U) {\n            return;\n        }\n        const profBonus = value.bonus(this.level);\n        this.setTextField(`${proficiencyName}_BONUS`, this.formatModifier(profBonus));\n        // Use switch fallthrough to check all the boxes lower than current proficiency\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/switch#breaking_and_fall-through\n        switch (value) {\n            case Proficiency.L:\n                this.setCheckBox(`${proficiencyName}_L`);\n            case Proficiency.M:\n                this.setCheckBox(`${proficiencyName}_M`);\n            case Proficiency.E:\n                this.setCheckBox(`${proficiencyName}_E`);\n            case Proficiency.T:\n                this.setCheckBox(`${proficiencyName}_T`);\n        }\n    }\n    setSavingThrow(value, keyAbility, fieldName) {\n        const modBonus = this._abilityScores.modifier(keyAbility);\n        const profBonus = value.proficiency.bonus(this.level);\n        const saveValue = modBonus + profBonus + value.otherBonus;\n        this.setTextField(`${fieldName}_VALUE`, saveValue);\n        this.setProficiencyFields(`${fieldName}_PROF`, value.proficiency);\n        this.setTextField(`${fieldName}_ITEM_BONUS`, this.formatModifier(value.otherBonus));\n    }\n    setSkill(value, keyAbility, skillName) {\n        const modBonus = this._abilityScores.modifier(keyAbility);\n        const profBonus = value.proficiency.bonus(this.level);\n        const skillValue = modBonus + profBonus + value.otherBonus - value.armorMalus;\n        this.setTextField(`${skillName}_VALUE`, skillValue);\n        this.setProficiencyFields(`${skillName}_PROF`, value.proficiency);\n        this.setTextField(`${skillName}_ITEM_BONUS`, this.formatModifier(value.otherBonus));\n        this.setTextField(`${skillName}_ARMOR_BONUS`, value.armorMalus);\n    }\n    setStrike(strike, idx) {\n        const keyAttackBonus = this._abilityScores.modifier(strike.keyAbility);\n        this.setTextField(`W${idx}_NAME`, strike.weapon);\n        this.setTextField(`W${idx}_KEY_BONUS`, keyAttackBonus);\n        this.setProficiencyFields(`W${idx}_PROF`, strike.proficiency);\n        this.setTextField(`W${idx}_ITEM_BONUS`, strike.otherBonus);\n        this.setTextField(`W${idx}_DAMAGE_DICE`, strike.damageDice);\n        this.setTextField(`W${idx}_DAMAGE_BONUS`, strike.damageBonus);\n        this.setCheckBox(`W${idx}_${strike.damageType}`);\n        this.setTextField(`W${idx}_OTHER`, this.formatList(strike.otherNotes));\n        this.setTextField(`W${idx}_TRAITS`, this.formatList(strike.traits));\n    }\n    setItems(items, itemField) {\n        const itemLines = [];\n        const investLines = [];\n        const bulkLine = [];\n        items.forEach((item) => {\n            const quantity = item.quantity ? ` (${item.quantity})` : '';\n            itemLines.push(item.name + quantity);\n            investLines.push(item.invested ? 'x' : '');\n            bulkLine.push(item.bulk.toString());\n        });\n        this.setTextField(`${itemField}_LIST`, itemLines.join('\\n'));\n        this.setTextField(`${itemField}_INVEST`, investLines.join('\\n'));\n        this.setTextField(`${itemField}_BULK`, bulkLine.join('\\n'));\n    }\n    calculateBulk(items) {\n        return items.reduce((sum, item) => sum + item.bulk * (item.quantity || 1), 0);\n    }\n    setFeatFields(value, fieldName) {\n        const values = Array.isArray(value) ? value : [value];\n        this.allFeats.push(...values);\n        const names = values.map((aValue) => aValue.name).sort();\n        this.setTextField(fieldName, this.formatList(names));\n    }\n    fillAction(action, fieldName) {\n        this.setTextField(`${fieldName}_NAME`, action.name);\n        if (action.actions) {\n            this.setTextField(`${fieldName}_ACTIONS`, action.actions.toString());\n        }\n        if (action.traits) {\n            this.setTextField(`${fieldName}_TRAITS`, this.formatList(action.traits));\n        }\n        this.setTextField(`${fieldName}_PAGE`, action.page);\n        this.setTextField(`${fieldName}_DESCRIPTION`, action.description);\n        this.setTextField(`${fieldName}_TRIGGER`, action.trigger);\n        if (action.freeAction) {\n            this.setCheckBox(`${fieldName}_FREEACTION`);\n        }\n        if (action.reaction) {\n            this.setCheckBox(`${fieldName}_REACTION`);\n        }\n    }\n}\nexport { Ability, AbilityScores, Action, ArmorClass, HitPoints, Lore, Perception, Proficiency, SavingThrow, Skill, Strike, WeaponProficiencies, };\n"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__992__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","Ability","AbilityScores","constructor","STR","DEX","CON","INT","WIS","CHA","scores","Map","set","modifier","ability","entries","Action","name","actions","reaction","freeAction","traits","page","description","trigger","oncePerDay","requirements","Proficiency","toString","bonus","level","U","T","E","M","L","ArmorClass","cap","unarmored","light","medium","heavy","current","otherBonus","FeatRecapPage","pdfDoc","TITLE_PADDING_BOTTOM","TITLE_SIZE","COLUMN_WIDTH","COLUMN_GAP","width","height","getPage","getSize","_pdfPage","addPage","moveTo","drawText","size","addFeats","feats","sort","a","b","chunks","forEach","featsChunk","chunkIdx","feat","idx","moveDown","maxWidth","lineHeight","moveRight","moveUp","moveLeft","Array","from","Math","ceil","length","_","i","slice","HitPoints","max","temporary","dying","wounded","resistances","conditions","isArray","Skill","proficiency","armorMalus","Lore","super","Perception","proficency","senses","SavingThrow","Strike","weapon","keyAbility","damageDice","damageBonus","damageType","other","special","wSpec","otherNotes","WeaponProficiencies","simple","martial","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Pf2","characterName","setTextField","playerName","ancestryAndHeritage","class","background","abilityScores","_abilityScores","setModField","alignement","printable","formatList","deity","_level","heroPoints","experiencePointsXp","classDc","modBonus","dcValue","formatModifier","setProficiencyFields","armorClass","profBonus","armorClassValue","min","fortitude","setSavingThrow","reflex","will","hitPoints","perception","perceptionValue","speed","movementNotes","acrobatics","setSkill","arcana","athletics","crafting","deception","diplomacy","intimidation","medicine","nature","occultism","performance","religion","society","stealth","survival","thievery","lore1","lore2","meeleeStrikes","strike","setStrike","rangedStrikes","weaponProficiencies","inverseMap","prof","has","push","count","weapons","languages","ancestryFeat1","setFeatFields","ancestryFeatS1","heritageFeat1","ancestryFeat5","ancestryFeat9","ancestryFeat13","ancestryFeat17","skillFeatB","skillFeat2","skillFeat4","skillFeat6","skillFeat8","skillFeat10","skillFeat12","skillFeat14","skillFeat16","skillFeat18","skillFeat20","generalFeat3","generalFeat7","generalFeat11","generalFeat15","generalFeat19","classFeat1","classFeat2","classFeat4","classFeat6","classFeat8","classFeat10","classFeat12","classFeat14","classFeat16","classFeat18","classFeat20","bonusFeats","values","allFeats","names","map","aValue","half","name1","name2","classFeature1_1","classFeature1_2","classFeature3","classFeature5","classFeature7","classFeature9","classFeature11","classFeature13","classFeature15","classFeature17","classFeature19","wornItems","items","wornItemsBulk","floor","reduce","sum","item","bulk","quantity","setItems","readiedItems","readiedItemsBulk","otherItems","otherItemsBulk","calculateBulk","purse","purseBulk","copper","silver","gold","platinum","freeActionsAndReactions","actionsAndActivities","action","fillAction","importCharacterSketchPng","sketchData","sketchButton","form","getField","PDFButton","characterSketch","embedPng","setImage","appendFeatDetails","fillBulk","dataUri","saveAsBase64","static","instance","loadPdf","PDFDocument","getForm","mod","join","strict","getTextField","setText","field","getFieldMaybe","PDFTextField","setCheckBox","fieldName","getCheckBox","check","proficiencyName","saveValue","skillName","skillValue","keyAttackBonus","itemField","itemLines","investLines","bulkLine","invested"],"sourceRoot":""}